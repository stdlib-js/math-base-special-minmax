{"version":3,"file":"index.mjs","sources":["../lib/minmax.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\nvar isPositiveZero = require( '@stdlib/math-base-assert-is-positive-zero' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum and maximum values.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output object\n* @param {number} x - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {(Array|TypedArray|Object)} minimum and maximum values\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmax( out, 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmax( out, 5.9, 3.14, 4.2 );\n* // returns [ 3.14, 5.9 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmax( out, 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmax( out, +0.0, -0.0 );\n* // returns [ -0.0, 0.0 ]\n*/\nfunction minmax( out, x, y ) {\n\tvar len;\n\tvar min;\n\tvar max;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tout[ 0 ] = x;\n\t\tout[ 1 ] = x;\n\t\treturn out;\n\t}\n\tif ( len === 3 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\tout[ 0 ] = NaN;\n\t\t\tout[ 1 ] = NaN;\n\t\t\treturn out;\n\t\t}\n\t\tif ( x === y && x === 0.0 ) {\n\t\t\tif ( isNegativeZero( x ) ) {\n\t\t\t\tout[ 0 ] = x;\n\t\t\t\tout[ 1 ] = y;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\tout[ 0 ] = y;\n\t\t\tout[ 1 ] = x;\n\t\t\treturn out;\n\t\t}\n\t\tif ( x < y ) {\n\t\t\tout[ 0 ] = x;\n\t\t\tout[ 1 ] = y;\n\t\t\treturn out;\n\t\t}\n\t\tout[ 0 ] = y;\n\t\tout[ 1 ] = x;\n\t\treturn out;\n\t}\n\tmin = PINF;\n\tmax = NINF;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) ) {\n\t\t\tout[ 0 ] = NaN;\n\t\t\tout[ 1 ] = NaN;\n\t\t\treturn out;\n\t\t}\n\t\tif ( v < min ) {\n\t\t\tmin = v;\n\t\t} else if (\n\t\t\tv === 0.0 &&\n\t\t\tv === min &&\n\t\t\tisNegativeZero( v )\n\t\t) {\n\t\t\tmin = v;\n\t\t}\n\t\tif ( v > max ) {\n\t\t\tmax = v;\n\t\t} else if (\n\t\t\tv === 0.0 &&\n\t\t\tv === max &&\n\t\t\tisPositiveZero( v )\n\t\t) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\tout[ 0 ] = min;\n\tout[ 1 ] = max;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = minmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar compute = require( './minmax.js' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum and maximum values.\n*\n* @param {(Array|TypedArray|Object)} [out] - output object\n* @param {number} x - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {(Array|TypedArray|Object)} minimum and maximum values\n*\n* @example\n* var v = minmax( 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmax( out, 5.9, 3.14, 4.2 );\n* // returns [ 3.14, 5.9 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var v = minmax( 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var v = minmax( +0.0, -0.0 );\n* // returns [ -0.0, 0.0 ]\n*/\nfunction minmax( out, x, y ) {\n\tvar bool;\n\tvar args;\n\tvar len;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 1 ) {\n\t\treturn compute( [ 0.0, 0.0 ], out );\n\t}\n\tbool = ( typeof arguments[ 0 ] === 'number' );\n\tif ( len === 2 ) {\n\t\tif ( bool ) {\n\t\t\treturn compute( [ 0.0, 0.0 ], out, x );\n\t\t}\n\t\treturn compute( out, x );\n\t}\n\tif ( len === 3 ) {\n\t\tif ( bool ) {\n\t\t\treturn compute( [ 0.0, 0.0 ], out, x, y );\n\t\t}\n\t\treturn compute( out, x, y );\n\t}\n\tif ( bool ) {\n\t\targs = [];\n\t\targs.push( [ 0.0, 0.0 ] );\n\t\ti = 0;\n\t} else {\n\t\targs = [];\n\t\targs.push( arguments[ 0 ] );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn compute.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = minmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum and maximum values.\n*\n* @module @stdlib/math-base-special-minmax\n*\n* @example\n* var minmax = require( '@stdlib/math-base-special-minmax' );\n*\n* var v = minmax( 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* v = minmax( 5.9, 3.14, 4.2 );\n* // returns [ 3.14, 5.9 ]\n*\n* v = minmax( 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* v = minmax( +0.0, -0.0 );\n* // returns [ -0.0, 0.0 ]\n*\n* v = minmax( 3.14 );\n* // returns [ 3.14, 3.14 ]\n*/\n\n// MODULES //\n\nvar minmax = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minmax;\n"],"names":["isNegativeZero","require$$0","isPositiveZero","require$$1","isnan","require$$2","NINF","require$$3","PINF","require$$4","compute","out","x","y","len","min","max","v","i","arguments","length","NaN","lib","bool","args","push","apply"],"mappings":";;ydAsBA,IAAIA,EAAiBC,EACjBC,EAAiBC,EACjBC,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EAgHX,ICpHIC,ED0CJ,SAAiBC,EAAKC,EAAGC,GACxB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAGJ,GAAa,KADbJ,EAAMK,UAAUC,QAIf,OAFAT,EAAK,GAAMC,EACXD,EAAK,GAAMC,EACJD,EAER,GAAa,IAARG,EACJ,OAAKV,EAAOQ,IAAOR,EAAOS,IACzBF,EAAK,GAAMU,IACXV,EAAK,GAAMU,IACJV,GAEHC,IAAMC,GAAW,IAAND,EACVZ,EAAgBY,IACpBD,EAAK,GAAMC,EACXD,EAAK,GAAME,EACJF,IAERA,EAAK,GAAME,EACXF,EAAK,GAAMC,EACJD,GAEHC,EAAIC,GACRF,EAAK,GAAMC,EACXD,EAAK,GAAME,EACJF,IAERA,EAAK,GAAME,EACXF,EAAK,GAAMC,EACJD,GAIR,IAFAI,EAAMP,EACNQ,EAAMV,EACAY,EAAI,EAAGA,EAAIJ,EAAKI,IAAM,CAE3B,GAAKd,EADLa,EAAIE,UAAWD,IAId,OAFAP,EAAK,GAAMU,IACXV,EAAK,GAAMU,IACJV,GAEHM,EAAIF,GAGF,IAANE,GACAA,IAAMF,GACNf,EAAgBiB,MAJhBF,EAAME,IAQFA,EAAID,GAGF,IAANC,GACAA,IAAMD,GACNd,EAAgBe,MAJhBD,EAAMC,GAWR,OAFAN,EAAK,GAAMI,EACXJ,EAAK,GAAMK,EACJL,GCnCR,IC9CAW,EDKA,SAAiBX,EAAKC,EAAGC,GACxB,IAAIU,EACAC,EACAV,EACAI,EAGJ,GAAa,KADbJ,EAAMK,UAAUC,QAEf,OAAOV,EAAS,CAAE,EAAK,GAAOC,GAG/B,GADAY,EAAmC,iBAAnBJ,UAAW,GACd,IAARL,EACJ,OAAKS,EACGb,EAAS,CAAE,EAAK,GAAOC,EAAKC,GAE7BF,EAASC,EAAKC,GAEtB,GAAa,IAARE,EACJ,OAAKS,EACGb,EAAS,CAAE,EAAK,GAAOC,EAAKC,EAAGC,GAEhCH,EAASC,EAAKC,EAAGC,GAWzB,IATKU,IACJC,EAAO,IACFC,KAAM,CAAE,EAAK,IAClBP,EAAI,KAEJM,EAAO,IACFC,KAAMN,UAAW,IACtBD,EAAI,GAEGA,EAAIJ,EAAKI,IAChBM,EAAKC,KAAMN,UAAWD,IAEvB,OAAOR,EAAQgB,MAAO,KAAMF"}