// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__;r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,_,p,f;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(i.call(e,r)||l.call(e,r)?(c=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),p="get"in t,f="set"in t,_&&(p||f))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&a&&a.call(e,r,t.get),f&&u&&u.call(e,r,t.set),e};var c=r;var _=Number.NEGATIVE_INFINITY;function p(e){return e!=e}function f(e,r,t,n,o){return p(e)||p(r)?(t[o]=NaN,t[o+n]=NaN,t):e===r&&0===e?function(e){return 0===e&&1/e===_}(e)?(t[o]=e,t[o+n]=r,t):(t[o]=r,t[o+n]=e,t):e<r?(t[o]=e,t[o+n]=r,t):(t[o]=r,t[o+n]=e,t)}function b(e,r){return f(e,r,[0,0],1,0)}c(b,"assign",{configurable:!1,enumerable:!1,writable:!1,value:f});export{f as assign,b as default};
//# sourceMappingURL=mod.js.map
